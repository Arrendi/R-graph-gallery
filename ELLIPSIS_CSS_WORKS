@import (reference) 'components/lib.less';
@import (reference) 'ui/ui-constants.less';
@import (reference) 'ui/ui-colors.less';

svg {
    .axis path,
    .axis line {
        fill: none;
        stroke-width: 0.5;
        stroke: #333;
    }

    text {
        font-family: @font-family-base;
        font-size: 10px;
    }

    .axis {
        text {
            fill: var(--graph-axis);
        }
    }

    .y.axis {
        line {
            stroke: #000;
            stroke-opacity: 0.15;
        }

        path {
            visibility: hidden;
        }

        .y-axis-label {
            fill: var(--ui-text-secondary);
            font-size: @font-xs;
        }
    }

    .x.axis {
        cursor: default;

        .minor {
            stroke-opacity: 0.5;
        }

        line {
            stroke: #000;
        }

        text {
            pointer-events: none;
        }

        .x-axis-label {
            fill: var(--ui-text-secondary);
            font-size: @font-xs;
        }
    }

    .x-axis-drag {
        cursor: move;
        cursor: grab;
        cursor: -moz-grab;
        cursor: -webkit-grab;
    }

    .x-axis-drag:active {
        cursor: move;
        cursor: grabbing;
        cursor: -moz-grabbing;
        cursor: -webkit-grabbing;
    }

    .x-axis-drag:hover {
        fill: #cde4ee; //to get the same color as @block_highlight_blue but with a .35 opacity
        fill-opacity: 0.35;
    }

    #clip {
        fill: #efefef;
    }

    path.series {
        fill: none;
    }

    .cursor {
        stroke: #000000;
        stroke-width: 1px;
        shape-rendering: crispEdges;
    }

    g.chart,
    g.overlay,
    g.event_capture {
        cursor: crosshair;
    }
    g.event_capture.annotation_mode {
        cursor: url('~images/pencil.cur'), auto;
    }
    g.event_capture.annotation_hover {
        cursor: pointer;
    }

    // Hide all anomalies bounds by default
    path.series.bounds {
        visibility: hidden;
    }
    // Show the anomalies bounds if this is the only mark group
    g.bands
        + g.mark.line:last-child
        > g.series-group:only-child
        path.series.bounds,
    g.bands + g.mark.line:last-child > g > g.single-series path.series.bounds {
        visibility: visible;
    }

    // Or if this group has the mouse over it
    g.chart.mouse-is-over {
        g.series-group.mouse-is-over path.series.bounds {
            visibility: visible;
        }
        g.series-group:not(.mouse-is-over) {
            opacity: 0.3;
        }
    }

    g.series-group {
        position: relative;
        z-index: 0;
    }
    g.series-group.mouse-is-over,
    g.series-group.highlight {
        z-index: 1;
    }

    path.series.bounds.highlight {
        visibility: visible;
        stroke: none !important;
    }
    g.chart.has-highlight {
        g.series-group:not(.highlight) {
            opacity: 0.3;
        }
    }

    @keyframes pop-in {
        from {
            opacity: 0;
            transform: scale(0, 0);
        }
        to {
            opacity: 1;
            transform: scale(1, 1);
        }
    }
    g.anomaly-callouts {
        .callout {
            //animation: pop-in 1.5s cubic-bezier(.3,3,0,1);
            transform-origin: 50% 50%;
            transform-box: fill-box;
        }
    }

    .chart.treemap {
        margin-left: 0;

        g.cell rect {
            stroke: #fff;
        }

        g.cell:hover rect {
            fill: @hot_base !important;
        }
    }

    .overlay .extent,
    .event_capture .extent {
        fill: #ccc;
        fill-opacity: 0.5;
        shape-rendering: crispEdges;
    }
    .event_capture.minimap .extent {
        fill: white;
        fill-opacity: 0.65;
        stroke-dasharray: 2;
        stroke-width: 2;
        stroke: black;
        shape-rendering: crispEdges;
    }
    .event_capture.annotation_mode .extent {
        fill: #fff5ee;
        stroke: #000;
        stroke-width: 2px;
        stroke-dasharray: 2, 2;
    }
    .event_capture.safari.annotation_mode .extent {
        stroke-width: 1px;
    }

    .event_capture.minimap rect.background {
        fill: black;
        opacity: 0.025;
    }

    .event_capture.minimap line {
        stroke: black;
        stroke-width: 3;
        shape-rendering: crispEdges;
    }

    /* -- Timeseries Paths -- */

    g.mark.line path.series,
    g.mark.band path.series,
    path.series.line {
        fill: none;
        stroke: #000;
        stroke-width: 2;
    }

    // top lines on stacked areas
    g.mark.area path.series.line {
        stroke-width: 2px;
    }

    path.area.highlight {
        stroke: @plot_highlight !important;
        fill: @plot_highlight !important;
    }

    path.series.highlight {
        stroke: @plot_highlight !important;
    }

    path.highlight.darker {
        stroke: darken(@plot_highlight, 10%) !important;
    }
    path.highlight.brighter {
        stroke: spin(lighten(@plot_highlight, 10%), -70) !important;
    }

    .under_cursor {
        .shaded-bar {
            opacity: 0.15;
            shape-rendering: crispEdges;
        }
    }

    g.mark.bars {
        .layer {
            .bar-segment.highlight {
                fill: @plot_highlight;
            }
        }
    }

    /* -- Event Bands -- */

    .band {
        fill: rgb(255, 128, 128);
    }

    .band.highlighted {
        fill: rgb(119, 74, 164);
        fill-opacity: 0.7 !important;
    }

    /* -- Time Cursor -- */

    text.time_cursor {
        fill: white;
    }

    .time_cursor {
        fill: #444;
    }

    /* -- Area Chart Highlight Bar -- */
    .area_highlight_bar {
        opacity: 0;
    }

    .area_highlight_bar.highlight {
        opacity: 0.9;
        fill: @plot_highlight;
    }

    /* -- Annotations -- */
    .annotation_box {
        fill: #fff5ee;
        fill-opacity: 0.2;
        pointer-events: all;
        shape-rendering: crispEdges;
        stroke: #000;
        stroke-width: 2px;
        stroke-dasharray: 2, 2;
    }
    .annotation_box.highlighted {
        fill-opacity: 0.5;
        stroke-width: 2px;
        stroke: @hot_base;
    }
    .annotation_box.safari {
        stroke-width: 1px;
    }

    /* -- series fadeout -- */

    path.series,
    rect.bar-segment {
        transition: opacity @animation-duration ease-out;
    }

    .series.line.hush {
        opacity: 0.3;

        body.dark-mode & {
            opacity: 0.15;
        }
    }

    .series.area.hush {
        opacity: 0.2;

        body.dark-mode & {
            opacity: 0.15;
        }
    }

    .series.layer.hush {
        /* for bars, we must transition the child elements to get animation */
        rect.bar-segment {
            opacity: 0.2;
        }
    }
}

div.layer_container {
    position: relative;
    display: block;
    canvas {
        image-rendering: pixelated;
    }
    // On mouse hover, we provide a stacking context for the tooltip to jump up
    &:hover {
        z-index: 1;
    }

    &--no-data {
        .event_capture {
            pointer-events: none;
        }
        .axis.y .tick text,
        .overlay {
            display: none;
        }
    }
}

svg.svg_under,
svg.layered_graph,
svg.cursor_layer {
    overflow: visible;
    position: absolute;
    transform: translate3d(0, 0, 0);
    backface-visibility: hidden;
    top: 0;
    left: 0;
}

/* -- Marker Layers -- */

/* axis trace default.  will add error/warning/ok classes for color. */
rect.marker_trace {
    fill: #f2f2f2;
}

/* marker ranges */
rect.marker_region {
    fill: lighten(@error, 15%);
    shape-rendering: crispEdges;
}

rect.marker_region.watchdog_marker {
    fill: @pink;
    fill-opacity: 0.03;
}

rect.blue_marker,
rect.info_marker {
    fill: lighten(#def, 2%);
}
rect.green_marker,
rect.ok_marker {
    fill: lighten(@success, 24%);
}
rect.orange_marker,
rect.warning_marker {
    fill: lighten(@strong_warning, 14.5%);
}
rect.callout_marker {
    fill: var(--interaction-callout-contrast);
}
rect.red_marker,
rect.error_marker {
    /* default */
}
rect.gray_marker,
rect.no_data_marker {
    fill: #e7e7e7;
}

/* Darken the colors for axis traces */
.marker_axis rect.green_marker,
.marker_axis rect.ok_marker {
    fill: darken(@success, 12%);
}
.marker_axis rect.orange_marker,
.marker_axis rect.warning_marker {
    fill: darken(@strong_warning, 9%);
}
.marker_axis rect.red_marker,
.marker_axis rect.error_marker {
    fill: darken(@error, 7%);
}
.marker_axis rect.gray_marker,
.marker_axis rect.no_data_marker {
    fill: #aaa;
}
.marker_axis rect.callout_marker {
    fill: var(--interaction-callout);
}
.marker_axis rect.watchdog_marker {
    fill: #f09;
    fill-opacity: 0.35;
}

/* A more transparent style for multiple markers */
rect.light_marker {
    fill-opacity: 0.25;
}

/* Marker lines: boundaries and value lines */

line.marker_boundary,
line.marker_line {
    /* default color is error */
    stroke: darken(@error, 10%);
    stroke-opacity: 0.66;
    stroke-dasharray: 8, 2;
    shape-rendering: crispEdges;

    &.callout_marker {
        stroke: var(--interaction-callout);
    }
}

line.marker_boundary {
    /* boundaries use sparser dashes and are lighter than value lines */
    stroke-dasharray: 4, 3;
    stroke-opacity: 0.33;
    &.marker_min.watchdog_marker {
        stroke: transparent;
    }

    &.callout_marker {
        fill: var(--interaction-callout);
    }

    &.marker_end.watchdog_marker,
    &.marker_start.watchdog_marker,
    &.marker_max.watchdog_marker,
    &.marker_end.process_marker,
    &.marker_start.process_marker,
    &.marker_max.process_marker {
        stroke: #f09;
        stroke-opacity: 1;
    }
}

line.marker_start,
line.marker_end {
    stroke: #7d7d7d;
    stroke-opacity: 0.4;
    stroke-dasharray: 4, 3;
    shape-rendering: crispEdges;
}

line.blue_marker,
line.info_marker {
    stroke: #7d7d7d;
}
line.green_marker,
line.ok_marker {
    stroke: darken(@success, 35%);
}
line.orange_marker,
line.warning_marker {
    stroke: darken(@strong_warning, 24%);
}
line.white_marker {
    stroke: #fff;
}
line.red_marker,
line.error_marker {
    /*The default*/
}

/* Line styles */
line.solid_marker,
line.strong_marker {
    /* Hack for solid line, phantomjs rendering nothing with 0, dashed with "none" */
    stroke-dasharray: 99999, 1;
}

line.bold_marker,
line.strong_marker {
    stroke-width: 2px;
}
line.hidden_marker {
    display: none;
}
line.marker_line.dashed_marker {
    stroke-dasharray: 8, 2;
}
line.marker_boundary.dashed_marker {
    stroke-dasharray: 4, 2;
}
line.marker_line.hidden_marker {
    display: none;
}

/* When overlaying multiple ranges, don't keep drawing the boundary */
line.marker_boundary.history_marker {
    stroke: none;
}

/* Text styles */
text.marker_label_text {
    /* default color is error */
    fill: darken(@error, 10%);
    &.watchdog_marker,
    &.process_marker {
        fill: #f09;
    }
    &.label_in_middle {
        fill: #7d7d7d;
    }
}
text.marker_label_text.large_text {
    font-size: @font-sm;
}
text.marker_label_text.alert_text {
    font-weight: bold;
}

rect.marker_label_bg {
    fill: #fff;
    fill-opacity: 0.8;

    &.watchdog_marker {
        fill: transparent;
    }
}

polyline.marker_label_pointer {
    /* default color is error */
    fill: darken(@error, 10%);
    shape-rendering: crispEdges;
}

polyline.blue_marker,
polyline.info_marker,
text.blue_marker,
text.info_marker {
    /*info*/
    fill: #7d7d7d;
}

polyline.green_marker,
polyline.ok_marker,
text.green_marker,
text.ok_marker {
    fill: darken(@success, 30%);
}

polyline.orange_marker,
polyline.warning_marker,
text.orange_marker,
text.warning_marker {
    fill: darken(@strong_warning, 20%);
}

polyline.red_marker,
polyline.error_marker,
text.red_marker,
text.error_marker {
    /*default*/
}

/* -- Thresholds -- */

.threshold_shade {
    fill: #f00;
    fill-opacity: 0.04;
}

.threshold_range_shade {
    fill: #f00;
    fill-opacity: 0.06;
}

.threshold_divider {
    stroke: #666;
    stroke-dasharray: 8, 3;
    stroke-opacity: 0.5;
}

.threshold_triggered {
}
.threshold_recovered {
}
.threshold_divider.threshold_current {
    stroke-opacity: 0;
}

.threshold_axis_alert {
    fill: #f66;
}

.threshold_axis_ok {
    fill: #9fb;
}

.threshold_axis_unknown {
    fill: #fff;
}

.threshold_level {
    stroke: #000;
    stroke-dasharray: 8, 3;
    stroke-opacity: 0.5;
}

.threshold_legend {
    fill: #000;
    fill-opacity: 0.5;
}

/* -- Points/Tooltip -- */
.overlay .point {
    line {
        stroke-width: 1px;
        stroke: black;
    }

    circle {
        fill: black;
    }

    text {
        fill: white;
        font-size: @font-sm; // may be overridden in script
        font-weight: bold;
    }

    text.plot_label {
        font-weight: normal;
    }

    rect.plot_value {
        fill-opacity: 0.7;
        fill: #000;
    }

    rect.plot_label {
        fill-opacity: 0.9;
        fill: #000;
    }
}

/* -- Legend -- */
.legend {
    padding: 0 !important;
    font-size: 10px;
    text-align: left;
    height: 50px;
    overflow: auto;

    pre {
        background: transparent;
    }

    ul {
        list-style: none;
        margin-bottom: 0;
    }

    li {
        padding: 0 0 0 0;
    }

    div .highlight,
    li .highlight {
        background: lighten(@plot_highlight, 46.5%);
    }

    li .highlight.hover .color_block {
        background: @plot_highlight;
    }

    li:last-child {
        padding-bottom: 0px;
    }

    li > span {
        display: inline-block;
        white-space: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;
    }

    .section-toggle {
        flex: 0 0 25px;
    }

    .entry-content {
        flex: 1 0;
        max-width: 100%;
    }

    .color_block {
        display: inline-block;
        width: 16px;
        height: 16px;
        line-height: 16px;
        background: @yellow_base;
        flex: 0 0 auto;
    }

    .value {
        flex: 0 0 10%;
    }

    .metric {
        flex: 0 0 25%;
    }

    .scope {
        flex: 0 1 48%;
    }

    .average {
        flex: 0 0 10%;
    }

    .expression {
        flex: 0 1 75%;
    }

    .distribution_summary {
        margin: 0 @spacing-sm;
    }

    span.highlight {
        color: @plot_highlight;
    }

    ::-webkit-scrollbar {
        width: 8px;
        height: 8px;
        padding: 0 2px;
        margin: 3px 0;
    }

    ::-webkit-scrollbar-track {
        background-color: #f4f4f4;
        border-radius: 5px;
    }

    ::-webkit-scrollbar-track:hover {
        background-color: #f0f0f0;
    }
    ::-webkit-resizer {
        border-radius: 5px;
        background-color: #666;
    }
    ::-webkit-scrollbar-thumb {
        min-height: 0.8em;
        min-width: 0.8em;
        border-radius: 5px;
        background-color: #ddd;
    }

    ::-webkit-scrollbar-thumb:hover {
        background-color: #bbb;
    }
    ::-webkit-scrollbar-thumb:active {
        background-color: #888;
    }
}

/* Heatmap */
.chart.heatmap {
    rect.cell.selected {
        fill: @plot_highlight;
        opacity: 0.8;
    }
}

.overlay.heatmap {
    .bar_overlay {
        pointer-events: none;
        opacity: 0.25;
        fill: transparent;
        stroke-width: 1px;
        stroke: #000;
        shape-rendering: crispEdges;
    }
    .cell {
        fill: #000;
        opacity: 0.3;
    }
    .cell.highlight {
        fill: @plot_highlight;
        opacity: 0.8;
    }
}

svg:hover .overlay.heatmap {
    .bar_overlay {
        opacity: 0.5;
        stroke: @plot_highlight;
        fill: transparent;
    }
}

/* Distribution */
.chart.distribution {
    .highlight_bar {
        opacity: 0;
    }
    .highlight_bar.highlight {
        opacity: 0.15;
    }
    .bar_overlay {
        fill: transparent;
    }

    .block {
        fill: #99cce5;
    }

    g.hot {
        .block {
            fill: @plot_highlight !important;
        }

        .bar_overlay {
            opacity: 0.15;
        }
    }
}

.list_container {
    overflow: auto;
    .unit_label {
        opacity: 0.55;
        font-size: @font-sm;
    }
}

.chart_xs .list_container .unit_label {
    visibility: hidden;
}
.chart_xs .time_cursor {
    visibility: hidden;
}
.chart_s .list_container .unit_label {
    font-size: @font-xs;
}
.chart_m .list_container .unit_label,
.chart_l .list_container .unit_label,
.chart_xl .list_container .unit_label {
    font-size: 14px;
}
.chart_fs .list_container .unit_label {
    font-size: 16px;
}

.chart.toplist {
    color: red;
    z-index: 10;

    div.list_row {
        position: relative;
        background: #fff;
        border-bottom: 1px solid #fff;
        box-sizing: border-box;
        z-index: 1;
    }
    div.list_row:last-child {
        border-bottom: none;
    }
    div.bar {
        position: absolute !important;
        top: 0;
        bottom: 0;
        left: 0;
        background-color: lighten(@blue_base, 40%);
        z-index: -1;
    }
    div.list_row.highlight {
        background-color: #f4f5f6;
        div.bar {
            background-color: lighten(@plot_highlight, 30%) !important;
        }
    }
    .name_label,
    .val_label {
        position: relative;
        color: #333;
        z-index: 1;
    }
    .val_label {
        display: inline-block;
        font-family: @font-family-base;
        font-weight: bold;
        text-align: right;
        line-height: 1;
    }
    .val_label.no_val {
        color: #999;
    }
    .name_label {
        display: inline;
        padding-left: 1em;
    }
    text {
        fill: #000;
    }
}

/* Chart overrides in the inspector */

.inspector svg {
    .axis {
        path,
        line {
            stroke: #fff !important;
        }

        text {
            fill: #fff;
        }
    }

    .distribution {
        g.hot {
            .bar_overlay {
                fill: #fff;
            }
        }
    }

    rect.marker_label_bg {
        fill: #000;
    }
    text.marker_label_text {
        fill: #fff;
    }
}

/* Change viz */
.change_container {
    overflow-y: auto;
    overflow-x: hidden;

    .overlay_line_container {
        position: absolute;
        top: 0;
        left: 0;
        pointer-events: none;
        width: 100%;
        height: 100%;
    }
}

.chart.changeviz {
    .change_row:first-child {
        padding-top: 0.25em;
    }
    .change_row:last-child {
        padding-bottom: 0.25em;
    }

    .change_row {
        div {
            display: inline-block;
            vertical-align: middle;
        }

        .group_value {
            text-align: right;
            float: left;
            font-weight: bold;
        }

        .group_name {
            text-align: left;
            float: left;
            white-space: nowrap;
        }

        .change_val {
            text-align: right;
            font-weight: bold;
        }

        .change_bar_container.negative {
            border-right: 1px #ddd solid;
        }

        .change_bar.negative {
            float: right;
            text-align: center;
            .outside_change_val {
                float: left;
                text-align: right;
            }
        }

        .change_bar.positive {
            float: left;
            text-align: center;
            .outside_change_val {
                float: right;
                text-align: left;
            }
        }

        .change_bar.good {
            background-color: lighten(@green_base, 40%);
        }

        .change_bar.bad {
            background-color: lighten(@red_base, 40%);
        }

        .change_bar.degenerate {
            background-color: #ddd;
        }
    }

    .change_row.highlight {
        background-color: #f4f5f6;
        .change_bar.good {
            background-color: lighten(@green_base, 20%);
        }
        .change_bar.bad {
            background-color: lighten(@red_base, 25%);
        }
    }

    .change_overlay {
        position: absolute;
        pointer-events: none;
        text-align: center;

        .past_container {
            background-color: rgba(100, 100, 100, 0.9);
            color: white;
            float: left;
            .past_label {
            }
            .past_value {
                font-weight: bold;
            }
        }
        .present_container {
            background-color: rgba(50, 50, 50, 0.9);
            color: white;
            float: left;
            .present_label {
            }
            .present_value {
                font-weight: bold;
            }
        }

        .present_container.good {
            background-color: fadeout(lighten(@green_base, 35%), 10%);
            color: black;
        }
        .present_container.bad {
            background-color: fadeout(lighten(@red_base, 35%), 10%);
            color: black;
        }
    }
}

.timeboard_page .chart .hexagongraph {
    .viewport .hexagon {
        cursor: pointer;
    }
}

/* Hostmap */

@app-container-background: rgba(50, 50, 50, 0.3);
@app-container-background-contrast: rgba(0, 0, 0, 0.2);
@app-container-background-hover: rgba(0, 0, 0, 0.3);
@app-container-background-selected: rgba(0, 0, 0, 0.4);

.hexagongraph {
    .graph-background {
        fill: none;
        pointer-events: visible;
    }

    .tooltip {
        pointer-events: none;

        text {
            font-family: @font-family-base;
            fill: white;
        }

        .background {
            fill: rgba(0, 0, 0, 0.7);
        }
    }

    .metric-tooltip {
        .name,
        .value,
        .metric {
            .text-white;
            float: left;
            display: inline-block;
            background-color: rgba(0, 0, 0, 0.7);
            padding: 0px 3px;
        }

        &:not(.compact) {
            .name,
            .value {
                clear: both;
            }
        }

        &.compact {
            .metric {
                display: none;
            }
        }

        &.align-right {
            .name,
            .value,
            .metric {
                float: right;
            }
        }

        &.nodata {
            .value,
            .metric {
                display: none;
            }
        }
    }

    .viewport .hexagon {
        foreignobject {
            pointer-events: none;
        }

        .path-highlight {
            stroke-width: 3px;
        }

        .hexagonpath {
            stroke: black;

            &:hover {
                .path-highlight;
            }
        }

        .hostname,
        .app-icons {
            text-align: center;
            font-size: 16px;
        }

        .hostname span {
            .ellipsis;
            background-color: rgba(0, 0, 0, 0.3);
            display: inline-block;
            color: white;
            max-width: 295px;
            border-radius: 3px;
            padding: 0px 5px;
        }

        .app-container {
            pointer-events: none;

            rect {
                stroke: rgba(90, 0, 0, 0.15);
                fill: @app-container-background;
            }

            text {
                fill: white;
            }
        }

        .app-hover {
            rect {
                transition: fill 0.1s ease-out;
                fill: @app-container-background-hover;
            }
        }

        .app-container {
            pointer-events: all;

            &:hover {
                .app-hover;
            }
        }

        &.highlight {
            .hexagonpath {
                .path-highlight;
            }

            .app-container {
                rect {
                    fill: @app-container-background-contrast;
                }

                &:hover {
                    .app-hover;
                }

                &.highlight {
                    rect {
                        fill: @app-container-background-selected;
                    }

                    text {
                        font-weight: bold;
                    }
                }
            }
        }

        &:hover {
            .hexagonpath {
                .path-highlight;
            }
        }

        &.nodata {
            .app-container rect {
                fill: @app-container-background-contrast;
            }
        }
    }

    &.tile-interactions .viewport .hexagon {
        cursor: pointer;
    }

    .hexagon .app-container {
        text {
            text-anchor: middle;
        }
    }

    .group {
        path {
            fill: rgba(255, 255, 255, 0.7);
            stroke-width: 4px;
            stroke: #333;
            stroke-linejoin: round;
        }

        .label {
            pointer-events: none;
            text-anchor: middle;
            font-family: @font-family-base;
        }

        .hover-rectangle {
            fill: none;
            pointer-events: visible;
        }

        &.highlight {
            .label {
                visibility: hidden;
            }

            path {
                stroke-width: 10px;
            }

            .hover-rectangle {
                fill: rgba(0, 0, 0, 0.05);
                stroke: #999;
                stroke-width: 5px;
            }
        }
    }

    &.group-interactions .group {
        cursor: pointer;
    }

    .group.container {
        .label {
            font-weight: bolder;
        }

        .background {
            fill-opacity: 0.15;
        }

        &.highlight {
            rect {
                stroke: #999;
                stroke-width: 5px;
                fill-opacity: 0.3;
            }
        }
    }

    &.drag * {
        cursor: move;
    }

    .no-matches-message {
        opacity: 0;
        pointer-events: none;
    }

    &.no-matches {
        .no-matches-message {
            opacity: 1;
            pointer-events: auto;
        }

        .note {
            display: none;
        }
    }

    &.show-host-inspector {
        .host-inspector-wrapper {
            transition: opacity @animation-duration linear;
            display: block;
            opacity: 1;
        }

        .overview_viz_legend {
            display: none;
        }
    }

    .host-inspector-wrapper {
        display: none;
        opacity: 0;
        position: absolute;
        width: 100%;
        bottom: 20px;
        left: 0px;
        padding: 0 20px;
        box-sizing: border-box;

        .close-trigger {
            display: block;
        }
    }

    .host-inspector {
        z-index: 1000;
        max-width: 1280px;
        box-shadow: 0px 0px 2px 2px rgba(0, 0, 0, 0.25);
    }
}

.hexagongraph .overview_viz_legend {
    visibility: hidden;
    position: absolute;
    bottom: 40px;
    right: 20px;
    width: 230px;
    padding-right: 10px;
    padding-left: 10px;
    padding-bottom: 5px;
    padding-top: @spacing-sm;
    background-color: white;
    border-radius: 1px;
    box-shadow: 0px 0px 2px 0px rgba(0, 0, 0, 0.25);

    transition: opacity 0.1s;
    opacity: 1;

    &.show {
        visibility: visible;
    }

    &.settings-open {
        .hostgroup-widget.show {
            display: none;
        }
    }

    hr {
        margin: 2px 0;
    }

    .label {
        opacity: 1;
    }

    h3,
    h4 {
        margin: 0 5px 0 0;
    }

    .fill-legend,
    .metrics {
        h3,
        h4 {
            .ellipsis;

            .light {
                color: darken(@purple_base, 10%);
            }
        }
    }

    .fill-legend {
        position: relative;
        min-height: 55px;

        h4 .light.smaller {
            color: #666;
            font-size: 14px;
            font-weight: bold;
        }

        .no-data {
            text-align: center;
        }

        .samples-wrapper {
            display: table;
            padding: 0px 5px;
            height: 110px;
            margin-left: 15px;
        }

        .samples {
            display: table-cell;
            vertical-align: middle;
        }

        .square {
            height: 15px;
            width: 15px;
            margin: 0 auto;
        }

        .sample-wrapper {
            display: inline-block;

            .sample {
                text-align: center;
                display: inline-block;
                width: 55px;

                .label {
                    width: 100%;
                    height: 18px;
                    .text-med;
                    .small;
                    .ellipsis;
                }
            }

            hr {
                display: inline-block;
                border: 0;
                border-top: 1px dotted #ccc;
                vertical-align: top;
                margin-top: 8px;
            }
        }

        .single-sample {
            .square {
                display: inline-block;
                margin: 5px 10px 0 0;
                line-height: 25px;
            }

            .label {
                vertical-align: top;
                margin: 4px 4px 0 0;
                display: inline-block;
            }
        }
    }

    .fill-legend:hover .icon-cog {
        .text-clickable;
    }

    &.settings-open .fill-legend .icon-cog {
        .deemphasize;
    }

    .palette-picker-toggle {
        position: absolute;
        top: -2px;
        right: -8px;

        .icon-cog {
            .deemphasize;
        }
    }

    .palette-picker {
        margin: 0px -2px 20px 0px;
        padding: 0;
        width: 250px;

        &:before,
        .icon-cancel-circled,
        .icon-cancel-light,
        .tick {
            display: none;
        }

        .palette,
        .inputs {
            &:hover {
                background: @block_highlight_blue;
            }
        }

        .inputs {
            padding: 5px 10px;

            .label {
                vertical-align: top;
                line-height: 26px;
            }
        }

        .palette {
            padding: 10px;
            border-bottom: 1px solid #e4e4e4;

            .icon-check {
                margin-left: 5px;
            }
        }

        .toggle {
            border-bottom: 1px solid #e4e4e4;
        }

        .palette-view {
            float: right;
        }
    }

    .hostgroup-widget {
        display: none;
        position: relative;

        &.show {
            display: block;
        }

        h3 {
            line-height: 20px;
            display: inline;
            font-size: 14px;
        }

        table {
            margin: 0px 0px 5px 0px;
        }

        .summary {
            position: relative;
            margin-bottom: 5px;

            .tags {
                margin-bottom: 5px;

                .tag {
                    margin-bottom: 5px;
                    max-width: 200px;
                    font-weight: bold;
                }

                .separator:last-child {
                    display: none;
                }
            }

            .hostcount {
                position: absolute;
                top: 0;
                right: 0;

                .gray-pill {
                    margin-right: 3px;
                }
            }
        }

        .group-metrics {
            table {
                width: 100%;
            }

            .label {
                display: inline-block;
                vertical-align: bottom;
                .ellipsis;
            }

            .metrics.scalar {
                .label {
                    max-width: 160px;
                }

                .metric_value {
                    .small;
                }
            }

            .metrics.percentage .label {
                max-width: 135px;
            }

            .value_container {
                text-align: right;
            }

            .metric_bar {
                opacity: 0.65;
            }
        }
    }
}

/* Hostmap widgets overrides */

.chart .hexagongraph {
    .note {
        position: absolute;
        font-family: @font-family-base;
        bottom: 0;
        left: 0;
        right: 0;
        padding: 0 @spacing-sm;
        background-color: rgba(226, 226, 226, 0.8);
        border-bottom: 1px solid #d5d5d5;
        text-align: center;
        .text-contrast-60;

        body.dark-mode & {
            .text-contrast-50; // adjust contrast for dark mode
            background: rgba(0, 0, 0, 0.4);
            border-color: transparent;
        }

        &.hidden {
            display: none;
        }
    }

    &:hover .note {
        .text-contrast-80;

        body.dark-mode & {
            .text-contrast-20; // invert contrast values for mixins in dark mode
        }
    }

    &.no-matches .note {
        display: none;
    }
}

/* Metric Alert Preivew Overrides */
#metric_tile svg {
    path.series.bounds {
        visibility: visible;
    }
}

// Override line-height set by the tabMedia class on the getting started page
.tabMedia .hexagongraph {
    .metric-tooltip {
        .name,
        .value,
        .metric {
            line-height: 15px; // this value is hardcoded in css as "13px/1.5" in body's font
        }
    }
}

////////////////////////////////////////////////////////////////////////
// Query Value
////////////////////////////////////////////////////////////////////////
.chart .big_number .unit {
    font-size: 50%;
    margin-left: 3px;
    text-align: right;
}

.chart_container {
    .grid_text {
        position: absolute;
        padding: 0 8px;
    }
    .grid_text.text-center {
        // centered via JS adjustments to margin-left
    }
    .grid_text.text-left {
        left: 0;
        right: auto;
    }
    .grid_text.text-right {
        left: auto;
        right: 0;
    }
}

.chart_container,
span,
.widget,
.content {
    &.red_on_white {
        color: @alert_red !important;
    }
    &.white_on_red {
        color: #fff !important;
        // Direct less variable is used as a fallback for browsers that don't support CSS variables (Phantomjs, IE 11)
        background-color: @red !important;
        background-color: var(--ui-status-danger) !important;
    }
    &.green_on_white {
        color: @alert_green !important;
    }
    &.white_on_green {
        color: #fff !important;
        // Direct less variable is used as a fallback for browsers that don't support CSS variables (Phantomjs, IE 11)
        background-color: @green !important;
        background-color: var(--ui-status-success) !important;
    }
    &.yellow_on_white {
        color: @alert_yellow !important;
    }
    &.white_on_yellow {
        color: #fff !important;
        // Direct less variable is used as a fallback for browsers that don't support CSS variables (Phantomjs, IE 11)
        background-color: @amber !important;
        background-color: var(--ui-status-warning) !important;
    }
    &.gray_on_white {
        color: #aaa !important;
        background-color: #f7f7f7 !important;
    }
    &.white_on_gray {
        color: #fff !important;
        background-color: #ccc !important;
    }
    &.cutom_text {
        background-color: #fff !important;
    }
    &.custom_bg {
        color: #fff;
    }
    &.custom_image {
        color: #fff !important;
        background-color: #fff !important;
        text-shadow: -1px -1px 2px #000, 1px -1px 2px #000, -1px 1px 2px #000,
            1px 1px 2px #000;
    }
}

.chart_container.hide_value .content span,
.query_value.hide_value .content span {
    display: none;
}

.widget,
.chart_container {
    &.no_data {
        color: #aaa;
        background-color: #f7f7f7;
    }
}

.red_on_white,
.green_on_white,
.yellow_on_white,
.custom_pill {
    .title_text {
        color: inherit;
    }
}

span.white_on_red,
span.white_on_green,
span.white_on_yellow,
span.white_on_gray,
span.custom_pill,
span.custom_bg,
.content.white_on_red,
.content.white_on_green,
.content.white_on_yellow,
.content.white_on_gray,
.content.custom_pill,
.content.custom_bg,
.widget.white_on_red,
.widget.white_on_green,
.widget.white_on_yellow,
.widget.white_on_gray,
.widget.custom_pill,
.widget.custom_bg,
.widget.custom_image {
    outline: none;
    .widget__header {
        border-bottom: 1px solid rgba(255, 255, 255, 0.2);
    }
    .widget__title-text {
        color: #fff !important;
    }
    .timeframe_icon,
    .controls {
        color: #fff;
        text-shadow: none;
    }
}
